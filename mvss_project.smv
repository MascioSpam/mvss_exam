------------------------
-- MVSS Project       --
-- Flavio Mascetti    --
-- Student ID #262277 --
------------------------

-----------------------------------------------------------------------------
-- Model Checking:							   --
-- Handling Zero-Priced Goods of NetBill Security and Transaction Protocol --
-----------------------------------------------------------------------------

------------------------------------------------------
-- Protocol specifications:                         --
-- http://www.sti.uniurb.it/aldini/mvss/2016s2a.pdf --
------------------------------------------------------

-------------
-- Modules --
-------------

-- List of Zero-Priced Goods protocol types
--- 1: Certified Delivery
--- 2: Certified Delivery without NetBill Server
--- 3: Verified Delivery
--- 4: Unverified Delivery

MODULE main
 VAR
   type : {1, 2, 3, 4};
   c : consumer (m);
   m : merchant (c, n, type);
   n : netbill (m, type);
 
 ASSIGN
   init (type) := {1, 2, 3, 4};


-- List of consumer states:
--- I:	  Idle
--- PR:   Price Request
--- SEPO: Signed Electronic Payment Order
--- PD:   Purchase done
--- ERROR

MODULE consumer(m)
 VAR
  state: {I, PR, SEPO, PD,ERROR};
 
 ASSIGN
   init (state) := I;
   next (state) := case
     state = I : PR;
   -- Type 1/2/3
     state = PR & m.state = GE : SEPO;
     state = SEPO & m.state = SR : PD;
   -- Type 4
     state = PR & m.state = SR : PD;
     TRUE : ERROR;
   esac;


-- List of merchant states:
--- I:    Idle
--- GE:   Encrypted Goods
--- EEPO: Endorsed EPO
--- SR:   Signed Result
--- ERROR

MODULE merchant(c, n, type)
 VAR
  state: {I, GE, EEPO, SR, ERROR};
 
 ASSIGN
   init (state) := I;
   next (state) := case
     state = I & c.state = PR : GE;
   -- Type 1
     state = GE & c.state = SEPO & type = 1 : EEPO;
     state = EEPO & n.state = SR & type = 1: SR;
   -- Type 2/3
     state = GE & c.state = SEPO & (type = 2 | type = 3) : SR;
   -- Type 4
     state = I & c.state = PR & type = 4 : SR;
     TRUE : ERROR;
   esac;


-- List of netbill server states:
--- I:  Idle
--- SR: Signed Result

MODULE netbill(m, type)
 VAR
  state: {I, SR, ERROR};
 
 ASSIGN
   init (state) := I;
   next (state) := case
     state = I  & type = 1 & m.state = EEPO : SR;
     state = I & type != 1 : I;
     TRUE : ERROR;
   esac;
